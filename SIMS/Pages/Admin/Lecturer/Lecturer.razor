@page "/admin/lecturer-management"
@layout SIMS.Shared.Layouts.MainLayout
@using SIMS.Shared.Models
@using System.Text.Json
@using SIMS.Data.Entities.Admin
@using SIMS.Shared.Components
@inject SIMS.Shared.Services.HeaderTitleService HeaderTitleService
@inject SIMS.Shared.Functions.DatabaseInteractionFunctions DatabaseFunctions
@inject NavigationManager Navigation

<PageTitle>Lecturer</PageTitle>

@if (lecturers != null)
{
    <Filter Filters="@filters" Items="@lecturers" FilteredItemsChanged="@FilteredItemsChangedCallback" />
    @if (filtered != null && filtered.Any())
    {
        <Table Data="@filtered" Columns="@columns" OnDataUpdated="LoadData" />
    }
    else
    {
        <Table Data="@lecturers" Columns="@columns" OnDataUpdated="LoadData" />
    }
}
else
{
    <Loading />
}

@code {
    private string HeaderTitle = "Lecturer";
    private IEnumerable<Lecturers> lecturers;
    private List<TableColumn<Lecturers>> columns;
    private List<Filters<Lecturers>> filters = new List<Filters<Lecturers>>();
    private List<Lecturers> filtered;

    private EventCallback<IEnumerable<Lecturers>> FilteredItemsChangedCallback =>
        EventCallback.Factory.Create<IEnumerable<Lecturers>>(this, UpdateFilteredItems);

    private void UpdateFilteredItems(IEnumerable<Lecturers> filteredItems)
    {
        filtered = filteredItems.ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        HeaderTitleService.Title = HeaderTitle;
        await LoadData();
    }

    private async Task LoadData()
    {
        lecturers = await DatabaseFunctions.LoadData<Lecturers>("api/Admin/GetLecturer");

        columns = new List<TableColumn<Lecturers>>
        {
            new TableColumn<Lecturers> { Header = "Member Code", Value = acc => acc.MemberCode },
            new TableColumn<Lecturers> { Header = "Email", Value = acc => acc.Email },
            new TableColumn<Lecturers> { Header = "Name", Value = acc => acc.Name },
            new TableColumn<Lecturers> { Header = "Created At", Value = acc => acc.CreatedAt },
            new TableColumn<Lecturers> { Header = "Updated At", Value = acc => acc.UpdatedAt },
        };
    }
}
